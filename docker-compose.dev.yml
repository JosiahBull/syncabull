version: '3'

services:
  traefik:
    container_name: traefik
    image: traefik:v2.5
    privileged: true
    depends_on:
      - frontend
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/etc/traefik/traefik-dynamic.yml
      - --entrypoints.web.address=:80
      
    ports:
      - "${APP_PORT:-3000}:80"
      - 127.0.0.1:9091:8080

    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-dynamic.dev.yml:/etc/traefik/traefik-dynamic.yml

  frontend:
    container_name: frontend-dev
    build:
        context: ./app
        dockerfile: Dockerfile.dev
    restart: always
    depends_on:
      - api
    environment:
      - PORT=3000
      - HOST=0.0.0.0
      - BASE_URL=http://api:3000/
      - BROWSER_BASE_URL=http://${APP_HOST:-localhost}:${APP_PORT:-3000}
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`${APP_HOST:-localhost}`)
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.http.routers.frontend.middlewares=security-headers@file
      # Also allow https
      - traefik.http.routers.frontendTLS.rule=Host(`${APP_HOST:-localhost}`)
      - traefik.http.routers.frontendTLS.entrypoints=web
      - traefik.http.routers.frontendTLS.middlewares=security-headers@file
      - traefik.http.routers.frontendTLS.tls=true
      - traefik.http.services.frontend.loadBalancer.server.port=3000 # required because build can take a while on start
    volumes:
      - ./app:/app:z

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - db
    environment:
      - PORT=3000
      - HOST=0.0.0.0
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=syncabull
      - DB_USER=syncabull
      - DB_PASS=syncabull
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - BROWSER_BASE_URL=http://${APP_HOST:-localhost}:${APP_PORT:-3000}
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`${APP_HOST:-localhost}`) && PathPrefix(`/api`)
      - traefik.http.routers.api.entrypoints=web
      - traefik.http.routers.api.middlewares=security-headers@file, api-headers@file
      # Also allow https
      - traefik.http.routers.apiTLS.rule=Host(`${APP_HOST:-localhost}`) && PathPrefix(`/api`)
      - traefik.http.routers.apiTLS.entrypoints=web
      - traefik.http.routers.apiTLS.middlewares=security-headers@file, api-headers@file
      - traefik.http.routers.apiTLS.tls=true

  db:
    container_name: db
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_DB=syncabull
      - POSTGRES_USER=syncabull
      - POSTGRES_PASSWORD=syncabull
    volumes:
      - syncabull-dev-pgdata:/var/lib/postgresql/data

volumes:
  syncabull-dev-pgdata:
    external: true